<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GraphQL Query Examples on vmware-aria-graph-examples</title><link>https://vmware-aria-graph-examples.github.io/graphql-query-examples/</link><description>Recent content in GraphQL Query Examples on vmware-aria-graph-examples</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><atom:link href="https://vmware-aria-graph-examples.github.io/graphql-query-examples/index.xml" rel="self" type="application/rss+xml"/><item><title>Query Entities by Type</title><link>https://vmware-aria-graph-examples.github.io/graphql-query-examples/queryentitybytype/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vmware-aria-graph-examples.github.io/graphql-query-examples/queryentitybytype/</guid><description>This query takes a single argument entityType to return entities filtered by the entityType. The query requests the entityId and the name and id of any namespaces that entity is part of.
Query 1 2 3 4 5 6 7 8 9 10 11 12 13 query QueryEntityByType($entityType: [String!]) { entityQuery { queryEntities(entityType: $entityType) { entities { entityId namespaces { name id } } } } } Variables 1 2 3 { &amp;#34;entityType&amp;#34;: &amp;#34;AWS.</description></item><item><title>Filtering Entity Queries</title><link>https://vmware-aria-graph-examples.github.io/graphql-query-examples/filtering-entity-queries/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vmware-aria-graph-examples.github.io/graphql-query-examples/filtering-entity-queries/</guid><description>When you perform an entityQuery you can filter the response based on the value of fields using the QueryFilter object .
The operator field
EQ equal to NEQ not equal to LT less than LTE less than or equal to GT greater than GTE greater than or equal to CONTAINS case sensitive check for the provided string within the field value STARTSWITH case sensitive check if the field value starts with the provided string ENDSWITH case sensitive check if the field value ends with the provided string ISNULL field is null ISNOTNULL field is not null Find a VM with a &amp;ldquo;Name&amp;rdquo; tag of value &amp;ldquo;VM1&amp;rdquo; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 query { entityQuery { queryEntities( entityType: [&amp;#34;AWS.</description></item></channel></rss>