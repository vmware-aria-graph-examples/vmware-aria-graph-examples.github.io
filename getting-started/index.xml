<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Getting Started on vmware-aria-graph-examples</title><link>https://vmware-aria-graph-examples.github.io/getting-started/</link><description>Recent content in Getting Started on vmware-aria-graph-examples</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><atom:link href="https://vmware-aria-graph-examples.github.io/getting-started/index.xml" rel="self" type="application/rss+xml"/><item><title>Authentication</title><link>https://vmware-aria-graph-examples.github.io/getting-started/authentication/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vmware-aria-graph-examples.github.io/getting-started/authentication/</guid><description>Authentication to the VMware Aria GraphQL API requires a CSP user token that is scoped to an Aria Hub role. See How do I generate API tokens in the VMware Cloud Services documentation.
The authMutation mutation has a method to generate an access token, which is used in subsequent API Queries to authenticate.
1 2 3 4 5 6 7 8 mutation { authMutation { generateAccessToken(userToken: &amp;#34;&amp;lt;API User Token&amp;gt;&amp;#34;) { authorization expirationTime } } } The response to the authMutation method is a JSON payload with the properties requested from the AuthAccessToken type.</description></item><item><title>Configuring Altair Client</title><link>https://vmware-aria-graph-examples.github.io/getting-started/configuring-altair-client/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vmware-aria-graph-examples.github.io/getting-started/configuring-altair-client/</guid><description>This article describes how to configure Altair for multiple environments, and how to run a pre-execution script to authenticate against VMware Aria&amp;rsquo;s GraphQL API if required. Altair can be downloaded as a desktop application, or installed as a browser plugin - these steps work for all versions.
Create an Environment Altair uses Environments to store global variables that can be accessed using the {{variable-name}} syntax. We will use an Environment to store configuration (the Aria User Token and FQDN) as well as programatically storing variables (the authentication header and expiry date).</description></item></channel></rss>